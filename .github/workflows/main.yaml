name: main

on:
  push:
    branches: [ main ]

env:
  SEMVERBOT_VERSION: "0.1.0"

jobs:
  build:
    name: pipeline
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: install pipenv
        run: |
          python3 -m pip install --upgrade pipenv

      - name: cache pipenv
        id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: run pipenv install
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: set up path
        run: |
          mkdir bin
          cd bin
          echo "$(pwd)" >> $GITHUB_PATH

      - name: install semverbot
        run: |
          cd bin
          curl -o sbot -L https://github.com/restechnica/semverbot/releases/download/v$SEMVERBOT_VERSION/sbot-linux-amd64
          chmod +x sbot

      - name: prepare build and release
        run: |
          sbot update version
          echo "RELEASE_VERSION=$(sbot predict version)" >> $GITHUB_ENV

      - name: build
        run: |
          pipenv run python3 setup.py bdist_wheel

      - name: release
        run: |
          echo "current version: $(sbot get version)"
          echo "next version: $RELEASE_VERSION"

          sbot release version

          git push origin $(sbot get version)

      - name: publish
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
